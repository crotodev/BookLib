<?xml version='1.0' encoding='utf-8'?>
<package xmlns="http://www.idpf.org/2007/opf" unique-identifier="uuid_id" version="2.0">
    <metadata xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:opf="http://www.idpf.org/2007/opf">
        <dc:identifier opf:scheme="calibre" id="calibre_id">1584</dc:identifier>
        <dc:identifier opf:scheme="uuid" id="uuid_id">63c7aa0a-244f-4fa1-828e-b6faceb0715f</dc:identifier>
        <dc:title>Reactive Programming With Scala and Akka</dc:title>
        <dc:creator opf:file-as="Sathyanarayanan, Prasanna Kumar &amp; Atreya, Suraj" opf:role="aut">Prasanna Kumar Sathyanarayanan</dc:creator>
        <dc:creator opf:file-as="Sathyanarayanan, Prasanna Kumar &amp; Atreya, Suraj" opf:role="aut">Suraj Atreya</dc:creator>
        <dc:contributor opf:file-as="calibre" opf:role="bkp">calibre (6.29.0) [https://calibre-ebook.com]</dc:contributor>
        <dc:date>2016-01-06T05:00:00+00:00</dc:date>
        <dc:description>&lt;div&gt;
&lt;p&gt;Harness reactive programming to build scalable and fault-tolerant distributed systems using Scala and Akka About This Book * Use the concepts of reactive programming to build distributed systems running on multiple nodes * Get to grips with the full range of Akka features including the upcoming and cutting edge experimental modules * A comprehensive coverage of the principles of FRP with real-world use cases to solve scalability issues Who This Book Is For If you are a developer who is passionate about building fault-tolerant, scalable distributed applications using Scala and Akka, then this book will give you a jump start. You should be familiar with Scala, but no prior knowledge of Akka and reactive programming is required. What You Will Learn * Explore functional programming using Scala * Design an asynchronous, non-blocking shopping cart application using Futures * Understand the Akka actor model and the relationship between actors and threads * Use the Actor Supervision feature to build a fault tolerant and resilient application * Create your own distributed system framework using an Akka cluster * Take a look under the hood to gain perspective on the Akka engine * See a comprehensive case study of a key value store with concurrent reads and writes * Model a finite state machine using state-driven actors In Detail Today's web-based applications need to scale quickly to tackle the demands of modern users. Reactive programming is the solution developed to ensure the fault tolerant and robust scaling that is essential for professional applications. Reactive programming in Scala and Akka provides a great platform to develop low latency resilient, concurrent Internet scale applications on the Java Virtual Machine. This comprehensive guide will help you get to grips with the concepts of reactive programming in order to build a robust distributed system in Scala and Akka. Written in two parts, you will first take a walkthrough of the reactive, asynchronous, and functional concepts in Scala before focusing on Akka and getting to grips with the details of real-world use cases. Begin with an introduction into functional reactive programming, before moving on to writing asynchronous application with non-blocking constructs in Scala. Get familiar with the concept of actor-based concurrency using Akka, and features such as Akka remoting, routing, and persistence capabilities to build distributed applications. Learn to scale applications using a multi-node Akka cluster and unit test Akka actors and get to grips with state machines and how to implement state-driven actors using Akka. Finally, put your skills to the test with a case study where you will concurrently and asynchronously store and retrieve data from a key value store. By progressively working through the Akka concepts, you will not only be able to write your own distributed system, but also appreciate the hidden complexity within the Akka ecosystem. Style and approach This comprehensive guide walks you through the basics of reactive programming in Scala and Akka, explaining some of the most frequently used constructs to the most advanced features, and taking you through building a full-blown distributed system with the help of real-world examples.&lt;br&gt;&lt;br&gt;(source: Bol.com)&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</dc:description>
        <dc:publisher>Packt Pub Ltd</dc:publisher>
        <dc:identifier opf:scheme="ISBN">9781783984343</dc:identifier>
        <dc:identifier opf:scheme="AMAZON">1783984341</dc:identifier>
        <dc:identifier opf:scheme="GOODREADS">29403241</dc:identifier>
        <dc:identifier opf:scheme="GOOGLE">W3msjwEACAAJ</dc:identifier>
        <dc:language>eng</dc:language>
        <meta name="calibre:rating" content="6"/>
        <meta name="calibre:timestamp" content="2023-11-15T16:33:17.864539+00:00"/>
        <meta name="calibre:title_sort" content="Reactive Programming With Scala and Akka"/>
        <meta name="calibre:user_metadata:#solutions" content="{&quot;table&quot;: &quot;custom_column_1&quot;, &quot;column&quot;: &quot;value&quot;, &quot;datatype&quot;: &quot;text&quot;, &quot;is_multiple&quot;: null, &quot;kind&quot;: &quot;field&quot;, &quot;name&quot;: &quot;Solutions&quot;, &quot;search_terms&quot;: [&quot;#solutions&quot;], &quot;label&quot;: &quot;solutions&quot;, &quot;colnum&quot;: 1, &quot;display&quot;: {&quot;description&quot;: &quot;&quot;, &quot;use_decorations&quot;: false}, &quot;is_custom&quot;: true, &quot;is_category&quot;: true, &quot;link_column&quot;: &quot;value&quot;, &quot;category_sort&quot;: &quot;value&quot;, &quot;is_csp&quot;: false, &quot;is_editable&quot;: true, &quot;rec_index&quot;: 22, &quot;#value#&quot;: null, &quot;#extra#&quot;: null, &quot;is_multiple2&quot;: {}}"/>
    </metadata>
    <guide>
        <reference type="cover" title="Cover" href="cover.jpg"/>
    </guide>
</package>
