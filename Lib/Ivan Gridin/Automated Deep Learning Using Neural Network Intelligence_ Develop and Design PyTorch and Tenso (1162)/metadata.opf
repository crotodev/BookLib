<?xml version='1.0' encoding='utf-8'?>
<package xmlns="http://www.idpf.org/2007/opf" unique-identifier="uuid_id" version="2.0">
    <metadata xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:opf="http://www.idpf.org/2007/opf">
        <dc:identifier opf:scheme="calibre" id="calibre_id">1162</dc:identifier>
        <dc:identifier opf:scheme="uuid" id="uuid_id">c2413ae4-1ccf-401d-9f66-a6d653bc9f5f</dc:identifier>
        <dc:title>Automated Deep Learning Using Neural Network Intelligence: Develop and Design PyTorch and TensorFlow Models Using Python</dc:title>
        <dc:creator opf:file-as="Gridin, Ivan" opf:role="aut">Ivan Gridin</dc:creator>
        <dc:contributor opf:file-as="calibre" opf:role="bkp">calibre (6.17.0) [https://calibre-ebook.com]</dc:contributor>
        <dc:date>2022-06-21T04:00:00+00:00</dc:date>
        <dc:description>&lt;div&gt;
&lt;p&gt;Optimize, develop, and design PyTorch and TensorFlow models for a specific problem using the Microsoft Neural Network Intelligence (NNI) toolkit. This book includes practical examples illustrating automated deep learning approaches and provides techniques to facilitate your deep learning model development. &lt;/p&gt;
&lt;p&gt;The first chapters of this book cover the basics of NNI toolkit usage and methods for solving hyper-parameter optimization tasks. You will understand the black-box function maximization problem using NNI, and know how to prepare a TensorFlow or PyTorch model for hyper-parameter tuning, launch an experiment, and interpret the results. The book dives into optimization tuners and the search algorithms they are based on: Evolution search, Annealing search, and the Bayesian Optimization approach. The Neural Architecture Search is covered and you will learn how to develop deep learning models from scratch. Multi-trial and one-shot searching approaches of automatic neural network design are presented. The book teaches you how to construct a search space and launch an architecture search using the latest state-of-the-art exploration strategies: Efficient Neural Architecture Search (ENAS) and Differential Architectural Search (DARTS). You will learn how to automate the construction of a neural network architecture for a particular problem and dataset. The book focuses on model compression and feature engineering methods that are essential in automated deep learning. It also includes performance techniques that allow the creation of large-scale distributive training platforms using NNI. &lt;/p&gt;
&lt;p&gt;After reading this book, you will know how to use the full toolkit of automated deep learning methods. The techniques and practical examples presented in this book will allow you to bring your neural network routines to a higher level.&lt;/p&gt;
&lt;p style="font-weight: bold"&gt;What You Will Learn&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Know the basic concepts of optimization tuners, search space, and trials&lt;/li&gt;
&lt;li&gt;Apply different hyper-parameter optimization algorithms to develop effective neural networks&lt;/li&gt;
&lt;li&gt;Construct new deep learning models from scratch&lt;/li&gt;
&lt;li&gt;Execute the automated Neural Architecture Search to create state-of-the-art deep learning models&lt;/li&gt;
&lt;li&gt;Compress the model to eliminate unnecessary deep learning layers&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Who This Book Is For&lt;/strong&gt; &lt;strong&gt;&lt;br&gt;&lt;/strong&gt;Intermediate to advanced data scientists and machine learning engineers involved in deep learning and practical neural network development&lt;/p&gt;
&lt;h3&gt;From the Back Cover&lt;/h3&gt;
&lt;p&gt;Optimize, develop, and design PyTorch and TensorFlow models for a specific problem using the Microsoft Neural Network Intelligence (NNI) toolkit. This book includes practical examples illustrating automated deep learning approaches and provides techniques to facilitate your deep learning model development.&lt;/p&gt;
&lt;p&gt;The first chapters of this book cover the basics of NNI toolkit usage and methods for solving hyper-parameter optimization tasks. You will understand the black-box function maximization problem using NNI, and know how to prepare a TensorFlow or PyTorch model for hyper-parameter tuning, launch an experiment, and interpret the results. The book dives into optimization tuners and the search algorithms they are based on: Evolution search, Annealing search, and the Bayesian Optimization approach. The Neural Architecture Search is covered and you will learn how to develop deep learning models from scratch. Multi-trial and one-shot searching approaches of automatic neural network design are presented. The book teaches you how to construct a search space and launch an architecture search using the latest state-of-the-art exploration strategies: Efficient Neural Architecture Search (ENAS) and Differential Architectural Search (DARTS). You will learn how to automate the construction of a neural network architecture for a particular problem and dataset. The book focuses on model compression and feature engineering methods that are essential in automated deep learning. It also includes performance techniques that allow the creation of large-scale distributive training platforms using NNI. &lt;/p&gt;
&lt;p&gt;After reading this book, you will know how to use the full toolkit of automated deep learning methods. The techniques and practical examples presented in this book will allow you to bring your neural network routines to a higher level.&lt;/p&gt;
&lt;p&gt;What You Will Learn &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Know the basic concepts of optimization tuners, search space, and trials&lt;/li&gt;
&lt;li&gt;Apply different hyper-parameter optimization algorithms to develop effective neural networks&lt;/li&gt;
&lt;li&gt;Construct new deep learning models from scratch&lt;/li&gt;
&lt;li&gt;Execute the automated Neural Architecture Search to create state-of-the-art deep learning models&lt;/li&gt;
&lt;li&gt;Compress the model to eliminate unnecessary deep learning layers&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;About the Author&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ivan Gridin&lt;/strong&gt; is a machine learning expert who has worked on distributive high-load systems and implemented different machine learning approaches in practice. One of the primary areas of his research is the design and analysis of predictive time series models. Ivan has fundamental math skills in probability theory, random process theory, time series analysis, machine learning, deep learning, and optimization. He has published books on genetic algorithms and time series analysis.&lt;/p&gt;&lt;/div&gt;</dc:description>
        <dc:publisher>Apress</dc:publisher>
        <dc:identifier opf:scheme="GOOGLE">XgfvzgEACAAJ</dc:identifier>
        <dc:identifier opf:scheme="AMAZON">1484281489</dc:identifier>
        <dc:identifier opf:scheme="ISBN">9781484281482</dc:identifier>
        <dc:language>eng</dc:language>
        <dc:subject>Computers</dc:subject>
        <dc:subject>Artificial Intelligence</dc:subject>
        <dc:subject>General</dc:subject>
        <dc:subject>Languages</dc:subject>
        <dc:subject>Python</dc:subject>
        <dc:subject>Information Technology</dc:subject>
        <dc:subject>Deep Learning</dc:subject>
        <meta name="calibre:timestamp" content="2023-01-03T17:17:28+00:00"/>
        <meta name="calibre:title_sort" content="Automated Deep Learning Using Neural Network Intelligence: Develop and Design PyTorch and TensorFlow Models Using Python"/>
        <meta name="calibre:user_metadata:#solutions" content="{&quot;table&quot;: &quot;custom_column_1&quot;, &quot;column&quot;: &quot;value&quot;, &quot;datatype&quot;: &quot;text&quot;, &quot;is_multiple&quot;: null, &quot;kind&quot;: &quot;field&quot;, &quot;name&quot;: &quot;Solutions&quot;, &quot;search_terms&quot;: [&quot;#solutions&quot;], &quot;label&quot;: &quot;solutions&quot;, &quot;colnum&quot;: 1, &quot;display&quot;: {&quot;use_decorations&quot;: false, &quot;description&quot;: &quot;&quot;}, &quot;is_custom&quot;: true, &quot;is_category&quot;: true, &quot;link_column&quot;: &quot;value&quot;, &quot;category_sort&quot;: &quot;value&quot;, &quot;is_csp&quot;: false, &quot;is_editable&quot;: true, &quot;rec_index&quot;: 22, &quot;#value#&quot;: null, &quot;#extra#&quot;: null, &quot;is_multiple2&quot;: {}}"/>
    </metadata>
    <guide>
        <reference type="cover" title="Cover" href="cover.jpg"/>
    </guide>
</package>
